{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","useState","toDo","setToDo","userInput","setUserInput","useEffect","database","ref","on","response","newArray","data","val","key","push","className","map","task","action","type","id","onChange","event","target","value","onClick","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAeEA,IAASC,cATQ,CACXC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,oDACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKER,QAAf,E,OC0DaS,MAxEf,WACE,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA8CA,OA5CAC,qBAAU,WAEMf,EAASgB,WAAWC,MAI5BC,GAAG,SAAS,SAACC,GACjB,IAAMC,EAAW,GACXC,EAAOF,EAASG,MAEtB,IAAK,IAAIC,KAAOF,EACdD,EAASI,KAAKH,EAAKE,IAGR,KAATF,IACJT,EAAQQ,GACRN,EAAa,UAMd,IAuBD,gCACE,oBAAIW,UAAU,aAAd,uBACA,6BACCd,EAAKe,KAAI,SAACC,GACT,OACE,6BACE,4BAAIA,WAMV,uBAAMC,OAAO,SAAb,UAGE,uBAAOC,KAAK,OAAOC,GAAG,UAAUC,SApClB,SAASC,GAC3BlB,EAAakB,EAAMC,OAAOC,QAmCiCA,MAAOrB,IAC9D,wBAAQsB,QAjCM,SAASH,GAE3BA,EAAMI,iBAEQpC,EAASgB,WAAWC,MAC5BO,KAAKX,GAIXC,EAAa,KAwBT,8BCzDOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb47d7c4.chunk.js","sourcesContent":["// firebase.js\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\n    const config = {\n        apiKey: \"AIzaSyC83TYynmq-keZa9mGca_6WWQcHCdoGyWw\",\n        authDomain: \"todoapp-7d660.firebaseapp.com\",\n        databaseURL: \"https://todoapp-7d660-default-rtdb.firebaseio.com\",\n        projectId: \"todoapp-7d660\",\n        storageBucket: \"todoapp-7d660.appspot.com\",\n        messagingSenderId: \"838516804265\",\n        appId: \"1:838516804265:web:745632b1fb46c52db9b7b8\"\n  };\n  firebase.initializeApp(config);\n\n  // this exports the CONFIGURED version of firebase\n  export default firebase;","import { useState, useEffect } from 'react';\nimport firebase from './firebase';\n\n\nfunction App() {\n  const [toDo, setToDo]=useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  useEffect(() => { \n    // A variable that holds a reference to our database\n    const dbRef = firebase.database().ref();\n    // In order to get a listener, that listens for the value changes and updates our component we do the following\n    //creating a new array that takes the response value from the user, and creating a key for each item\n    //we push the data to the new array and then \n    dbRef.on('value', (response) => {\n      const newArray = [];\n      const data = response.val();\n     \n      for (let key in data) {\n        newArray.push(data[key]);\n      } \n\n      if (data !== ''){\n      setToDo(newArray);\n      setUserInput('');\n      }\n     \n\n    });\n\n  }, [])\n \n  const handleEvent = function(event){\n    setUserInput(event.target.value);\n  }\n\n  const handleClick = function(event){\n    //event.preventDefault prevents the default action: form submission\n    event.preventDefault();\n\n    const dbRef = firebase.database().ref();\n    dbRef.push(userInput);\n  \n    \n    // resetting the state to an empty string\n    setUserInput('');\n\n\n\n  }\n  \n\n  return (\n    <div>\n      <h1 className=\"title-todo\">JUNO TODO</h1>\n      <ul>\n      {toDo.map((task) => {\n        return (\n          <li>\n            <p>{task}</p>\n           </li>\n         \n         )\n        })}\n      </ul>\n      <form action=\"submit\">\n\n        \n        <input type=\"text\" id=\"newtask\" onChange={handleEvent} value={userInput}/>\n        <button onClick={handleClick}>Add To-do</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}